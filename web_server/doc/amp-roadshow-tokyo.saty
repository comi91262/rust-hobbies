% -*- coding: utf-8 -*-
@require: stdjabook
@require: itemize
@require: code

document (|
    title = {AMP Roadshow Tokyo 2018};
    author = {Kenta Tabata};
    show-title = true;
    show-toc = true
|) '<
    +section{はじめに}<
        +subsection{What is this?}<
            +p {
                AMP Roadshow Tokyo 2018のレポート。その場で書き取ったメモ＋後から追加したコメントで構成している。
                なお、会場のスライドはネットでは公開しないようです。
            }
        >
        +subsection{このレポートを読む際の注意点}<
            +p {
                \#から始まる文章は私のコメントである
            }
        >
    >
    +section{そもそもAMPとは}<
        +p {
            https://www.ampproject.org/learn/overview/より
        }
        +p {
            AMPはオープンソースライブラリであり、魅力的で、スムーズでかつ、瞬時にロードできるwebページを簡単に作る方法を提供します。
            AMPページは、あなたによって制御でき、あなたがリンクできる単なるウェブページでしかありません。
            AMPはあなたに既にあるスキルセットやWebページをつくるフレームワークで構築することができます。
            AMPは多くの異なったプラットフォームでサポートされていて、ブラウザ間で互換性を保ちます。
            AMPエコシステムには、出版、広告、電子商取引、地方や小規模企業など、2500万のドメイン、
            100以上のテクノロジープロバイダ、主要なプラットフォームが含まれます。
        }
        +p {
            AMPページは以下の３つのコアコンポーネントで構築される。
        }
        +listing {
            * AMP HTML
            * AMP JS
            * AMP Cache
        }
        +subsection{AMP HTML}< 
            +p {
                AMP HTMLは、信頼性のあるパフォーマンスのためにいくつかの
                制限のあるHTMLです。AMP HTMLは基本的にカスタムAMPプロパティ
                でHTMLを拡張しています。もっともシンプルなAMP HTMLは次のように
                なります。               
            }
        +code(`
<!doctype html>
<html amp>
<head>
  <meta charset="utf-8">
  <link rel="canonical" href="hello-world.html">
  <meta name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1">
  <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>
  <script async src="https://cdn.ampproject.org/v0.js"></script>
</head>
<body>Hello World!</body>
</html>
        `);
        +p {
            Though most tags in an AMP HTML page are regular HTML tags, some HTML tags are replaced with AMP-specific tags (see also HTML Tags in the AMP spec). These custom elements, called AMP HTML components, make common patterns easy to implement in a performant way.

            For example, the amp-img tag provides full srcset support even in browsers that don’t support it yet. Learn how to create your first AMP HTML page.

%AMP pages are discovered by search engines and other platforms through the <link rel=""> HTML tag. You can choose to have a non-AMP version and an AMP version of your page, or just an AMP version. Learn more in Make Your Page Discoverable.

        }
        >
        +subsection{AMP JS}< 
            +p {
                The AMP JS library ensures the fast rendering of AMP HTML pages.
                The AMP JS library implements all of AMP's best performance practices, manages resource loading and gives you the custom tags mentioned above, all to ensure a fast rendering of your page.
                Among the biggest optimizations is the fact that it makes everything that comes from external resources asynchronous, so nothing in the page can block anything from rendering.
                Other performance techniques include the sandboxing of all iframes, the pre-calculation of the layout of every element on page before resources are loaded and the disabling of slow CSS selectors.
                To learn more about not just the optimizations but the limitations, read the AMP HTML specification.
            }
        >
        +subsection{AMP Cache}< 
            +p {
                The Google AMP Cache can be used to serve cached AMP HTML pages.

                The Google AMP Cache is a proxy-based content delivery network for delivering all valid AMP documents. It fetches AMP HTML pages, caches them, and improves page performance automatically. When using the Google AMP Cache, the document, all JS files and all images load from the same origin that is using HTTP 2.0 for maximum efficiency.

                The cache also comes with a built-in validation system which confirms that the page is guaranteed to work, and that it doesn't depend on external resources. The validation system runs a series of assertions confirming the page’s markup meets the AMP HTML specification.

                Another version of the validator comes bundled with every AMP page. This version can log validation errors directly to the browser’s console when the page is rendered, allowing you to see how complex changes in your code might impact performance and user experience.

                Learn more about testing your AMP HTML pages.
            }
        >
    >
    +section{イベント概要}<
        +listing{ 
            * イベント名： AMP Roadshow Tokyo
            * 日程： 2018 年 4 月 27 日（金） 9:30 - 17:00（開場: 9:00）
            * 場所：グーグル合同会社
            * 定員 ：240 名
        }
        +subsection{タイムテーブル}<
            +listing{ 
                * 9:00am 開場
                * 9:30am Introduction and Keynote
                * 9:45am Rich content experiences with AMP
                * 10:15am Advanced interactivity with AMP
                * 10:45am 休憩
                * 11:00am Progressive Web AMPs
                * 11:30am AMP in production
                * 12:00pm What's next in AMP
                * 12:30pm ランチ
                * 1:30pm Guest Talk or Panel
                * 2:00pm Q&A with AMP team
                * 2:30pm Monetization with AMP
                * 3:00pm Amplify live!
                * 5:00pm まとめ
            }
        >
    >
    +section{Introduction and Keynote}<
        +p {
            ご質問はhttps://www.sli.do/に投げてください
        }
        +p {
            Progressive Web Apps: What, Why and How
        }
        +pn {
            AMPはオープンソース。Googleとは独立したものとして捉えてください.
        }
        +p {
            3つの部分
            HTML, JSを拡張する （でも拡張はつらいのであとで変えたい）
            AMP Cache → googleのもっているやつ
            3G 10s  → 3,4s
            ページロードを小さくした

            10 seconds 
            to load 75\% of web pages on 3G (日本では4Gだけど、世界的には3G)

            -7\% conversions per 1second delsy
            3秒以上loadにかかると半分は離脱する。

            AMPいれると遅くなるから入れられないよね...
            → そこをなんとかします。
        }
        +p {
            AMPはOver 4 billiino site 広範囲に普及している.


            Timeline 2015
            UUeader binding
            AMP Stories
            AMP for Email
            AMP Ads
            WordPress
            New URL
        }
        +p {
            2017年の電子商取引収入の半分はモバイルからのものです
        }
        +p {
            Ali ExpressのWebサイトの速度改善の例です
        }
        +listing {
            * 36\% led to 10.5 orders
            * 27\%のコンバージョン(実際にユーザが商品を買った)を増加
            * AMPで4\%コンバージョンを増加させた
        }
        +p {
            \< link rel \> が元々の色々追加した
            PWA \<-\> AMP 
            AMPはライブラリであると捉えてください
        }
>

+section{Rich content experiences with AMP}<
    +p {
        \@islu
        AMP
        CSS 50kb
        JS ばつ

        Web Compornetsでもっとも成功した例
        複雑を単純に、
        　AMP ライブラリ
        煩雑なレスポインシブル

        \* レスポんしぶる CSSどうやるの？

        layout 属性　responsible - アスペクト比を合わせてブラウザの拡張
        　　　　　　　　　　　　　　　　にあわせて拡張
        full
        srcset属性　　AMPだとpolyfill古いやつでも可能

        amp-youtube 動画IDからパフォーマンスを落とさず、埋め込み可能
        amp-twiiter
        amp-gist    gistを普通に読み込むとパフォーマンスが落ちるが
        　　　　　　　　　　
        amp-carousel パフォーマンスを落とさない！カルーセル
        controlsをつける、

        amp-accordion
        amp-ligntbox
        ...
        amp-social-hoge
        ネイティブのシェアを起動できる

        時ドメインからアMPを配信する場合 AMP Cacheほどはやくならない
        amp-toolbox-optimizer
        AMP Cache同等の最適化を提供するnode モジュール


        試したいなら　AMP プレイグラウンドがあります
        例：Ali Express, 一休.com
        AMP Startにサンプルがあります
        AMPでウェブページが作れるぞ！を覚えて帰ってください
    }
>

+section{Advanced interactivity with AMP}<
    +p { 
           User -\> AMP Page \<- AMP Cache
           欲しいものリスト コメントをする
           \<amp-selector\>
           色を、量、サイズをウェブサイト上で選択させる場合に使用する
           \<amp-list\> & \<amp-mustace\>
           \<amp-bind\>
           reactとかのやつができる　data-binding
           Combinig components
           X + Y = ?
    }
>

+section{Progressive Web AMPs}<
    +p {
        PWA：　ブラウザのAPIの組み合わせです。
        ネイティブアプリは...
        80\% of users' top 3 apps　残り20を奪う
        一ヶ月につきインストールするアプリの平均は0%

        Service Workers: A clinet-side JavaScript proxy
        使い方
        \<link rel="manifest" href="/manifest.json"\>
        manifext.json
        \< start_url = "" \> 

        PWA or AMP? 別に対比するものではなく、共存可能

        AMP = web page = PWA

        The AMP Cache Problem
        PWAは同一ドメインである必要がある。あれ、どうするの？

        \<amp-install-serviceworker\>
        URLをserviceworker内で書き換える？


        運用経験ありますか？
        AMP: ３割くらい？
        PWA: あまりいなかった

        先進的な話
        PWAのページの中にAMPを入れよう！
        　利点：

        With Shadow DOM
        Window
        一回の読み込み AMP Library
        document 無限大

        例：amp.cards
        \* Uses the Guardian's live AMP pages.
        \* ...
        Web      Android      iOS
        PWAShell Native Shell Native Shell
        AMP

    }
>

+section{AMP in production}<
    +p {
        Production-ready AMP pages.
        あるWebPageを本番環境に乗せるまでによく起きる問題点と対処方法

        \# Generate
        手ではつくらない
        3p CMS (RSS Web, AppliNews)
        stardard html -\> amp html
        drupal amp /wordpress amp
        環境によって、手に入るAMPページが違ったりする。
        \# Optimize
        動機：機能追加とか、バグ修正とか
        \* いらないampを呼ばない
        \* 必要なCSSのみをloadする Global CSS -\> Local CSS
        \* Image Optimization, websiteを読んで
        \# Validate
        amp pageがスペック（ブラウザ）を満たしているか
        CI環境に毎回チェックする取り込みましょう！
        　npm amphtml-validator
        さらによい方法はモニタリングすること
        amphtml-validator + cronjobでもよいが
        -\> GoogleSearchConsole 
        \# Measure
        lighthouse 
        webpagetest
        \<amp-analytices\>もあるぞ！
        Measure + Collect + Batch

        \# Distribute
        配信による問題
        AMP Page - Google 
        - Bing 
        - Twitter

        AMP Page -\> metadata -\> cache

        コース問題: ドメインがなんちゃらでfailすること
        endpoint-com.ampproject.org -\> endpoint.com

        \<Access-Control-   : htt \>というタグをつける
        Content mismatch
    }
>

+section{What's next of AMP}<
    +p {
        \* amp-datepicker
        Infinite Scroll 

        \* SSR of AMP
        普通のレンダリングフロー
        browser loads the page
        AMP Boilerplate CSS hides the page
        AMP JS loads
        AMP inserts the AMP CSS
        AMP bootstraps web componets
        AMP shows the page
        それをSSRでやる
        　まったくわからない...

        \* CSS comverter
        AMPは使えないCSSがある

        \* hoge..

        \* Allow developers to program AMP pages with JavaScript

        AMP library : github 11000starts 
        Contribute: bit.ly/helpamp
    }
>

+section{Guest Talk or Panel} <
    +subsection{CyberAgentの例} <
        +p{
            why amp?　search UX and mobile US
            Sessions
            7xのSessions

            AD CPM
            Change AD possions
            Use \<amp-ad-sticky\>

            Search Bar
            \<amp-bird\> \<amp-from\> \<amp 
            \* 状態管理
            \* なんか Vueっぽいことしてる
        }
    > 
    +subsection{一休の例} <
        +p{
        デザイナーとエンジニアの役割
        新しい企画をする場合、とりあえずデザイナー
        がモックを作る。

        リアルタイム性の低いコンテンツはキャッシュに送る
        stylelint
        }
    >
>

+section{Q&A with AMP team}<
    +p {
        もう ampをiframe を使わないでください。
        　理由　viewportの設定が煩雑
        　 　　　tracking要素に使われるのは1つ 
        analystiクラックできる amp-pixel

        AMP pageからAMP pageへ遷移するとき 
        キャッシュのURLを指定して高速化を図りたい
        　　　　　　　ことがあるのですが、現状スマートな実現方法はありますか？
        -\> 検討中

        ampに適さないパターンは？　google docsとか
        もともと、mobile webを高速にするために生まれた。

        　ec2サイトでローディングを加速するために使ってください
        js や cssが複雑かしてサイトは遅くなってるので

        amp reactやamp angularはでてこないよ
        jsがampになるかもしれけどね

        　クッキーにpersonalizeデータを持たせて、できる
        ..なんの話だったか

        フルアンプのサイトはある？　ない。
    }
>

+section{Monetization with AMP}<
    +p {
    Adverinig & AMP
    マネタイズ
    　Ads on the Web Today
    広告が好きな人がいますか？
    なんでみんな嫌いなのか
    Disrupive ads   表示が崩れる UXが悪くなる
    Slow loadings ads  遅くなる
    Unsafe ads      マルウェアにリダイレクトする
    　　　　　　　　　　何が広告として配信されているかpublisherは
    　　　　よくわからない！

    Adに対する AMPの試み
    set dimensins
    separate the ads
    prioritized content
    \<amp-ad\>
    type="
    data-loading-strategy="2.0" 二つのviewportの先にadを
    よみこみ
    \</amp-ad\>

    ad impression 328%  
    increase in ad revenue paid to publishers メモ取れず

    New Ad Features
    \* Single Request Architecture
    \* Ad Fresh ..

    \# How do AMPHTML Adds work?
    1  -\>  Validation throuhg crypto signing
    有効なAMPページかを検証する（上のvalidationフェイズ）
    Unsafeな広告をカット
    2 adを含める
    ３　
    ４　Single high-rekdfkdfdf

    \# ads battery use
    AMPにより、80% batteryの消費を抑えた 

    3x 軽く
    6x 高速化
    13% 売り上げアップ

    \# celtraQ + 

    \# AMP for a langing page
    \# Ensure that post click exprimence

    Using AMP for your Adword langing page.
    結局
    　４パターンのマネタイズの方法があります。
    }
>
>


